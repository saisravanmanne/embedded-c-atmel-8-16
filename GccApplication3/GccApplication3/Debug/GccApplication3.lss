
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000fe  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  0000012e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000ad  00000000  00000000  0000014e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000006f  00000000  00000000  000001fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000c7  00000000  00000000  0000026a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000334  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000013d  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000006b  00000000  00000000  00000495  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>

int main(void)
{
	DDRB=0b11111111;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	87 bb       	out	0x17, r24	; 23
	DDRD=0b11111111;
  70:	81 bb       	out	0x11, r24	; 17
	PORTD=0b00000000;
  72:	12 ba       	out	0x12, r1	; 18
	int cnt=0;
	
    while(1)
    {
	    
		for(i=0;i<1000;i++)
  74:	20 e0       	ldi	r18, 0x00	; 0
  76:	30 e0       	ldi	r19, 0x00	; 0


#include <avr/io.h>

int main(void)
{
  78:	78 ee       	ldi	r23, 0xE8	; 232
  7a:	63 e0       	ldi	r22, 0x03	; 3
			for(j=0;j<1000;j++)
			{
				
				if(cnt==90);
				{
					PORTD^=(1<<1);
  7c:	52 e0       	ldi	r21, 0x02	; 2
	int cnt=0;
	
    while(1)
    {
	    
		for(i=0;i<1000;i++)
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	e0 e0       	ldi	r30, 0x00	; 0
  82:	0e c0       	rjmp	.+28     	; 0xa0 <main+0x34>
			for(j=0;j<1000;j++)
			{
				
				if(cnt==90);
				{
					PORTD^=(1<<1);
  84:	42 b3       	in	r20, 0x12	; 18
  86:	45 27       	eor	r20, r21
  88:	42 bb       	out	0x12, r20	; 18
  8a:	01 97       	sbiw	r24, 0x01	; 1
    {
	    
		for(i=0;i<1000;i++)
		{
			cnt++;
			for(j=0;j<1000;j++)
  8c:	00 97       	sbiw	r24, 0x00	; 0
  8e:	d1 f7       	brne	.-12     	; 0x84 <main+0x18>
	int cnt=0;
	
    while(1)
    {
	    
		for(i=0;i<1000;i++)
  90:	2f 5f       	subi	r18, 0xFF	; 255
  92:	3f 4f       	sbci	r19, 0xFF	; 255
  94:	28 3e       	cpi	r18, 0xE8	; 232
  96:	83 e0       	ldi	r24, 0x03	; 3
  98:	38 07       	cpc	r19, r24
  9a:	14 f0       	brlt	.+4      	; 0xa0 <main+0x34>
  9c:	2f 2f       	mov	r18, r31
  9e:	3e 2f       	mov	r19, r30


#include <avr/io.h>

int main(void)
{
  a0:	87 2f       	mov	r24, r23
  a2:	96 2f       	mov	r25, r22
  a4:	ef cf       	rjmp	.-34     	; 0x84 <main+0x18>

000000a6 <_exit>:
  a6:	f8 94       	cli

000000a8 <__stop_program>:
  a8:	ff cf       	rjmp	.-2      	; 0xa8 <__stop_program>
